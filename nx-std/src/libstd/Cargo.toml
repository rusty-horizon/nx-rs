[package]
authors = ["The Rust Project Developers"]
name = "std"
version = "0.0.0"
build = "build.rs"
license = "MIT/Apache-2.0"
repository = "https://github.com/rust-lang/rust.git"
description = "The Rust Standard Library (devkitPro + libnx version)"

[lib]
name = "std"
path = "lib.rs"

[dev-dependencies]
rand = "0.4"

[dependencies]
alloc = { path = "../liballoc" }
alloc_jemalloc = { path = "../liballoc_jemalloc", optional = true }
alloc_system = { path = "../liballoc_system" }
panic_unwind = { path = "../libpanic_unwind" }
panic_abort = { path = "../libpanic_abort" }
#core = { path = "../libcore" }
#libc = { path = "../rustc/libc_shim" }
#compiler_builtins = { path = "../rustc/compiler_builtins_shim" }
#profiler_builtins = { path = "../libprofiler_builtins", optional = true }
unwind = { path = "../libunwind" }
rustc-demangle = { version = "0.1.10", features = ['rustc-dep-of-std'] }
backtrace-sys = { version = "0.1.24", features = ["rustc-dep-of-std"], optional = true }


#TODO: Why is uncommenting this causing compile errors?
#[target.x86_64-apple-darwin.dependencies]
#rustc_asan = { path = "../librustc_asan" }
#rustc_tsan = { path = "../librustc_tsan" }

#[target.x86_64-unknown-linux-gnu.dependencies]
#rustc_asan = { path = "../librustc_asan" }
#rustc_lsan = { path = "../librustc_lsan" }
#rustc_msan = { path = "../librustc_msan" }
#rustc_tsan = { path = "../librustc_tsan" }

nx-sys = { git = "https://github.com/rusty-horizon/nx-rs" }

[target.x86_64-fortanix-unknown-sgx.dependencies]
fortanix-sgx-abi = { version = "0.3.2", features = ['rustc-dep-of-std'] }

[build-dependencies]
cc = "1.0"

[features]
default = []
backtrace = ["backtrace-sys"]
force_alloc_system = []
panic-unwind = []
#profiler = ["profiler_builtins"]

# An off-by-default feature which enables a linux-syscall-like ABI for libstd to
# interoperate with the host environment. Currently not well documented and
# requires rebuilding the standard library to use it.
wasm_syscall = []
